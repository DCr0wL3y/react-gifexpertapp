{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGriditem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cat","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGriditem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAETC,mBAAS,IAFA,mBAEtCC,EAFsC,KAE1BC,EAF0B,KAoB9C,OAEI,sBAAMC,SAdW,SAACC,GAClBA,EAAEC,iBAGEJ,EAAWK,OAAOC,OAAS,IAE3BR,GAAgB,SAAAS,GAAG,OAAIP,GAAJ,mBAAkBO,OACrCN,EAAc,MAOlB,SAEI,uBACAO,KAAK,OACLC,MAAQT,EACRU,SAvBmB,SAACP,GACzBF,EAAcE,EAAEQ,OAAOF,a,+BCRjBG,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DAGbC,EAHa,iDAGoCC,UAAWH,GAH/C,+DAKAI,MAAOF,GALP,cAKbG,EALa,gBAMEA,EAAKC,OANP,uBAMZC,EANY,EAMZA,KACDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAXvB,kBAeXM,GAfW,4CAAH,sDCEPO,EAAc,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAGjC,OACI,sBAAKc,UAAU,OAAf,UACI,qBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,4BAAIA,QCJHO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECDb,SAACA,GAAc,IAAD,EACZd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAHyB,mBAC/BC,EAD+B,KACxBC,EADwB,KAqBtC,OAfJC,qBAAU,WAERxB,EAASC,GACRwB,MAAM,SAAAC,GAEDH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAInB,CAAEpB,IAIOqB,EDjB6BK,CAAc1B,GAAlCa,EAHqB,EAG3BN,KAAca,EAHa,EAGbA,QAIxB,OACE,mCAGE,sBAAKJ,UAAU,YAAf,UACI,qBAAIA,UAAU,oCAAd,UAAoDhB,EAApD,OAEDoB,GAAW,mBAAGJ,UAAU,mCAAb,qBAGFH,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAEKA,GADAA,EAAIC,aElBpBgB,EAAe,WAAO,IAAD,EACMzC,mBAAS,CAAC,eADhB,mBACvB0C,EADuB,KACX3C,EADW,KAO9B,OACI,qCACE,8CACA,uBACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,6BAGQ2C,EAAWnB,KAAK,SAAAT,GAAQ,OACxB,cAAC,EAAD,CAEAA,SAAYA,GADPA,Y,MCfvB6B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.ed456c40.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\n\nexport const AddCategory = ({ setCategories }) => {\n\n    const  [inputValue, setInputValue] = useState('');\n\n    const  handleInputChange = (e)=>{\n       setInputValue(e.target.value);\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n\n        if( inputValue.trim().length > 2){\n\n            setCategories ( cat =>[inputValue,...cat ]);\n            setInputValue('');\n        }\n\n\n    }\n    return (\n\n        <form onSubmit={ handleSubmit }>\n\n            <input \n            type=\"text\"\n            value={ inputValue }\n            onChange={ handleInputChange }\n            />\n        </form>\n    )\n\n}\n\nAddCategory.propTypes ={\n\n    setCategories: PropTypes.func.isRequired\n}\n    \n    \n","export const getGifs = async ( category ) => {\n\n\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI (category) }&limit=10&api_key=jGU0bqN1iKXRP60KdzNF6WNN30flsTK6`\n\n    const resp = await fetch( url );\n    const {data} = await resp.json();\n    const gifs = data.map( img => {\n        return{\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    })\n\n     return gifs;\n}","import React from 'react'\n\nexport const GifGriditem = ({ title, url }) => {\n     \n\n    return (\n        <div className='card'>\n            <img src={ url } alt={ title} />\n            <p>{title}</p>\n        </div>\n    )\n}\n","import React from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs'\nimport { GifGriditem } from './GifGriditem';\n\nexport const GifGrid = ({ category }) => {\n\n\n      const { data: images, loading } = useFetchGifs( category );\n    \n   \n    \n    return (\n      <>\n\n\n        <div className=\"card-grid\">\n            <h3 className=\"animate__animated animate__bounce\">{ category } </h3>\n          \n          {loading && <p className=\"animate__animated animate__flash\">loading</p> }\n                \n                {\n                    images.map( img => (\n                        <GifGriditem \n                        key={img.id}\n                        { ...img }\n                        />\n                        ))\n                    }\n\n          \n        </div>\n        </>\n    )\n}\n","import {  useState,useEffect } from \"react\"\nimport { getGifs } from '../helpers/getGifs'\n\nexport const useFetchGifs = (category) => {\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    });\n    \nuseEffect(() => {\n\n  getGifs( category )\n  .then( imgs =>{\n\n        setState({\n            data: imgs,\n            loading: false\n        });\n  })\n\n},[ category])\n\n   \n\n    return state; //{data:[], loading: true };\n\n}","import React, { useState } from 'react'\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\n\nexport const GifExpertApp = () => {\n    const [categories, setCategories] = useState(['One Punch ']);\n\n    // const handleAdd = ()=>{\n    // //    setCategories ([...categories, 'alucard']);\n    //    setCategories ( cat =>[...cat, 'alucard']);\n    // }\n    return (\n        <>\n          <h2>GifExpertApp</h2>\n          <hr />\n          <AddCategory setCategories={ setCategories } />\n          <ol>\n              \n              {\n                  categories.map( category =>( \n                  <GifGrid \n                  key={category}\n                  category = {category}\n                   />\n    ))\n              }\n              </ol>  \n        </>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}